#!/usr/bin/env node
// -*- mode: js -*-
// vim: set filetype=javascript :
// Copyright 2014 Joyent, Inc.  All rights reserved.
var url = require('url');

// var common = require('../lib/cli_common');
var util = require('util');
var path = require('path');
var fs = require('fs');

var bunyan = require('bunyan');
var smartdc = require('../lib/cloudapi'),
    CloudAPI = smartdc.CloudAPI;
var shared = require('../lib/shared'),
    printErr = shared.printErr,
    commonCb = shared.commonCb,
    DEFAULT_OPTIONS = shared.DEFAULT_OPTIONS;
var cmdln = require('cmdln'),
    Cmdln = cmdln.Cmdln;
var auth = require('smartdc-auth');

var pkg = require('../package.json');
var dashdash = require('dashdash');

var options = DEFAULT_OPTIONS;

if (require.main === module) {

    var parser = dashdash.createParser({options: options});

    try {
        var opts = parser.parse(process.argv);
    } catch (e) {
        console.error('sdc-info: error: %s', e.message);
        process.exit(1);
    }

    if (opts.debug) {
        process.env.DEBUG = 1;
        opts.logLevel = 'trace';
    }

    // Use `parser.help()` for formatted options help.
    if (opts.help || ! opts._args.length || opts._args[0] === 'help') {
        var help = parser.help({includeEnv: true}).trimRight();
        console.log('Display role tags for a given SmartDC resource\n\n' +
                'Usage: sdc-info [OPTIONS] resource \n' + 'Options:\n' +
                help);
        process.exit(0);
    }

    if (opts.version) {
        console.log('sdc-info', pkg.version);
        process.exit(0);
    }

    if (typeof (opts.keyId) === 'undefined') {
        console.error('Either -k or (env) SDC_KEY_ID must be specified');
        process.exit(1);
    }

    if (!opts.account) {
        console.error('Either -a or (env) SDC_ACCOUNT must be specified');
        process.exit(1);
    }

    if (!opts.url) {
        console.error('Either -u or (env) SDC_URL must be specified');
        process.exit(1);
    }

    opts.sign = auth.cliSigner({
        keyId: opts.keyId,
        user: opts.account,
        subuser: opts.user
    });

    var cloudapi = new CloudAPI(opts);

    cloudapi.getRoleTags(opts._args[0], commonCb);

}
